version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tml-postgres
    environment:
      POSTGRES_DB: tml_corrosion
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - tml-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: tml-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/tml_corrosion
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tml-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    container_name: tml-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - tml-network

networks:
  tml-network:
    driver: bridge

volumes:
  postgres_data: